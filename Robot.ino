 #include <Servo.h>

// Define flame sensor pins
#define FLAME_SENSOR_LEFT A0
#define FLAME_SENSOR_CENTER A1
#define FLAME_SENSOR_RIGHT A2

// Define motor driver pins
#define MOTOR_L1 5 Â // Left Motor Forward
#define MOTOR_L2 6 Â // Left Motor Backward
#define MOTOR_R1 9 Â // Right Motor Forward
#define MOTOR_R2 10 // Right Motor Backward

// Define relay for water pump
#define RELAY_PIN 7
#define RELAY_ON LOW Â // Adjust based on relay type
#define RELAY_OFF HIGH

// Define servo motor pin
#define SERVO_PIN 3

// Create Servo object
Servo waterServo;

// Flame sensor threshold
#define FIRE_DETECTED_THRESHOLD 800 Â // Adjust based on sensor readings
#define DEAD_ZONE 50 Â // Minimum difference before turning

void setup() {
  Serial.begin(9600);
  
  pinMode(MOTOR_L1, OUTPUT);
  pinMode(MOTOR_L2, OUTPUT);
  pinMode(MOTOR_R1, OUTPUT);
  pinMode(MOTOR_R2, OUTPUT);
  pinMode(RELAY_PIN, OUTPUT);
  digitalWrite(RELAY_PIN, RELAY_OFF);
  waterServo.attach(SERVO_PIN);
  waterServo.write(90);
  
  pinMode(FLAME_SENSOR_LEFT, INPUT);
  pinMode(FLAME_SENSOR_CENTER, INPUT);
  pinMode(FLAME_SENSOR_RIGHT, INPUT);
  
  Serial.println("ðŸš€ Fire Fighting Robot Initialized...");
}

void loop() {
Â  Â  int flameLeft = analogRead(FLAME_SENSOR_LEFT);
Â  Â  int flameCenter = analogRead(FLAME_SENSOR_CENTER);
Â  Â  int flameRight = analogRead(FLAME_SENSOR_RIGHT);

Â  Â  Serial.print("Flame Left: "); Serial.print(flameLeft);
Â  Â  Serial.print(" | Flame Center: "); Serial.print(flameCenter);
Â  Â  Serial.print(" | Flame Right: "); Serial.println(flameRight);

Â  Â  if (flameCenter < FIRE_DETECTED_THRESHOLD) {
Â  Â  Â  Â  Serial.println("ðŸ”¥ Fire Detected at Center! Moving Forward...");
Â  Â  Â  Â  moveForward();
Â  Â  Â  Â  activateWaterPump();
Â  Â  } else if (flameLeft < FIRE_DETECTED_THRESHOLD && (flameLeft + DEAD_ZONE) < flameRight) {
Â  Â  Â  Â  Serial.println("ðŸ”¥ Fire Detected at Left! Turning Left...");
Â  Â  Â  Â  turnLeft();
Â  Â  Â  Â  activateWaterPump();
Â  Â  } else if (flameRight < FIRE_DETECTED_THRESHOLD && (flameRight + DEAD_ZONE) < flameLeft) {
Â  Â  Â  Â  Serial.println("ðŸ”¥ Fire Detected at Right! Turning Right...");
Â  Â  Â  Â  turnRight();
Â  Â  Â  Â  activateWaterPump();
Â  Â  } else {
Â  Â  Â  Â  Serial.println("âœ… No Fire Detected. Stopping...");
Â  Â  Â  Â  stopMotors();
Â  Â  Â  Â  deactivateWaterPump();
Â  Â  }

Â  Â  delay(700); // Slightly increased delay for stability
}

void moveForward() {
Â  Â  digitalWrite(MOTOR_L1, HIGH);
Â  Â  digitalWrite(MOTOR_L2, LOW);
Â  Â  digitalWrite(MOTOR_R1, HIGH);
Â  Â  digitalWrite(MOTOR_R2, LOW);
Â  Â  delay(200);
Â  Â  stopMotors();
}

void turnLeft() {
Â  Â  digitalWrite(MOTOR_L1, LOW);
Â  Â  digitalWrite(MOTOR_L2, HIGH);
Â  Â  digitalWrite(MOTOR_R1, HIGH);
Â  Â  digitalWrite(MOTOR_R2, LOW);
Â  Â  delay(250);
Â  Â  stopMotors();
}

void turnRight() {
Â  Â  digitalWrite(MOTOR_L1, HIGH);
Â  Â  digitalWrite(MOTOR_L2, LOW);
Â  Â  digitalWrite(MOTOR_R1, LOW);
Â  Â  digitalWrite(MOTOR_R2, HIGH);
Â  Â  delay(250);
Â  Â  stopMotors();
}

void stopMotors() {
Â  Â  digitalWrite(MOTOR_L1, LOW);
Â  Â  digitalWrite(MOTOR_L2, LOW);
Â  Â  digitalWrite(MOTOR_R1, LOW);
Â  Â  digitalWrite(MOTOR_R2, LOW);
}

void activateWaterPump() {
Â  Â  Serial.println("ðŸš° Activating Water Pump...");
Â  Â  digitalWrite(RELAY_PIN, RELAY_ON);

Â  Â  for (int pos = 60; pos <= 120; pos += 5) {
Â  Â  Â  Â  waterServo.write(pos);
Â  Â  Â  Â  delay(100);
Â  Â  }
Â  Â  for (int pos = 120; pos >= 60; pos -= 5) {
Â  Â  Â  Â  waterServo.write(pos);
Â  Â  Â  Â  delay(100);
Â  Â  }

Â  Â  delay(2000);
Â  Â  deactivateWaterPump();
}

void deactivateWaterPump() {
Â  Â  Serial.println("âœ… Deactivating Water Pump...");
Â  Â  digitalWrite(RELAY_PIN, RELAY_OFF);
Â  Â  waterServo.write(90);
}
